<?xml version="1.0" encoding="UTF-8"?>

<system>

    <!-- part 1 & 2 -->

    <!-- virtual memory space for uart driver  -->
    <memory_region name="uart_memory" size="0x1000" phys_addr="0x9000000" />
    
    <!-- buffer space for communication between client and server  -->
    <memory_region name="input_buffer_memory" size="0x1000" />
    <memory_region name="output_buffer_memory" size="0x1000" />

    <!-- protection domain of serial_server -->
    <protection_domain name="serial_server" priority="1">
        <program_image path="serial_server.elf" />

        <!-- allow this PD to access uart driver -->
        <map mr="uart_memory" vaddr="0x4000000" perms="rw" cached="false" setvar_vaddr="uart_base_vaddr" />
        <irq id="0" irq="33"/> 

        <!-- allow this PD to access communication buffer -->
        <map mr="input_buffer_memory" vaddr="0x5000000" perms="rw" setvar_vaddr="input_buffer" />
        <map mr="output_buffer_memory" vaddr="0x6000000" perms="rw" setvar_vaddr="output_buffer" />
    </protection_domain>

    <!-- protection domain of client -->
    <protection_domain name="client" priority="0">
        <program_image path="client.elf" />
        <!-- allow this PD to access communication buffer -->
        <map mr="input_buffer_memory" vaddr="0x5000000" perms="r" setvar_vaddr="input_buffer"/>
        <map mr="output_buffer_memory" vaddr="0x6000000" perms="rw" setvar_vaddr="output_buffer" />
    </protection_domain>

    <!-- channel for client serial_server communication -->
    <channel>
        <end pd="serial_server" id="1"/>
        <end pd="client" id="1"/>
    </channel>

    <!-- part 3 -->

    <!-- protection domain of wordle_server -->
    <protection_domain name="wordle_server" priority="254">
        <program_image path="wordle_server.elf" />
    </protection_domain>

    <!-- channel for client wordle_server communication -->
    <channel>
        <end pd="wordle_server" id="1"/>
        <end pd="client" id="2"  pp="true"/>
    </channel>

    <!-- part 4 -->

    <!--
    This is what the virtual machine will use as its "RAM".
    Remember it does not know it is a VM and so it will expect a
    block of contigious memory as RAM.
    -->
    <memory_region name="guest_ram" size="0x10000000" page_size="0x200_000" phys_addr="0x40000000" />
    <!-- Create a memory region for the ethernet device -->
    <memory_region name="ethernet" size="0x1000" phys_addr="0xa003000" />
    <!--
        Create a memory region for the GIC CPU interface. This is a device
        that is virtualised at the hardware-level, unlike other parts
        of the GIC.
    -->
    <memory_region name="gic_vcpu" size="0x1000" phys_addr="0x8040000" />

    <!-- Create a VMM protection domain -->
    <protection_domain name="vmm" priority="101">
        <program_image path="vmm.elf" />
        <!--
            Map in the virtual machine's RAM region as the VMM needs
            access to it as well for starting and setting up the VM.
        -->
        <map mr="guest_ram" vaddr="0x40000000" perms="rw"
            setvar_vaddr="guest_ram_vaddr" />
        <!--
            Create the virtual machine, the vCPU `id` is used for the
            VMM to refer to the VM. Similar to channels and IRQs.
        -->
        <virtual_machine name="linux" priority="100">
            <vcpu id="0" />
            <map mr="guest_ram" vaddr="0x40000000" perms="rwx" />
            <map mr="ethernet" vaddr="0xa003000" perms="rw" cached="false" />
            <!-- example used uart, I used uart_memory -->
            <map mr="uart_memory" vaddr="0x9000000" perms="rw" cached="false" /> 
            <map mr="gic_vcpu" vaddr="0x8010000" perms="rw" cached="false" />
        </virtual_machine>
        <!--
            We want the VMM to receive the ethernet interrupts, which it
            will then deliver to the VM.
        -->
        <irq irq="79" id="2" trigger="edge" />
    </protection_domain>

    <channel>
    <!-- The VMM code expects the channel ID to be 1. -->
    <end pd="vmm" id="1" pp="true"/>
    <end pd="wordle_server" id="2" />
    </channel>

</system>

